version: "3.5"

networks:
  test:
    driver: bridge

volumes:
  esdata1:
    driver: local

services:

  config:
    container_name: c-config
    build:
      context: ./elasticsearch/config
      dockerfile: ./Dockerfile
    command: /elasticsearch/configure.sh
    working_dir: /elasticsearch
    volumes:
      - ./elasticsearch:/elasticsearch
    depends_on:
      - es7
    networks:
      - test
    healthcheck:
      test: "[ -f /run/health.check ] && exit 0 || exit 1"
      interval: 2s
      timeout: 30s
      retries: 300
    restart: unless-stopped

  # data:
  #   image: mongo:4.4
  #   container_name: c-data
  #   command: /scripts/mongo-import.sh
  #   working_dir: /scripts
  #   volumes:
  #     - ./mongodb/scripts:/scripts
  #   depends_on:
  #     monstache:
  #       condition: service_healthy
  #     config:
  #       condition: service_healthy
  #   environment:
  #     MONGO_USER_ROOT_NAME: root-user
  #     MONGO_USER_ROOT_PASSWORD: password
  #     MONGO_AUTH_SOURCE: admin
  #   networks:
  #     - test

  # monstache:
  #   image: rwynn/monstache:6.7.2
  #   container_name: c-monstache
  #   working_dir: /app
  #   command: -f ./monstache.config.toml
  #   volumes:
  #     - ./monstache.config.toml:/app/monstache.config.toml
  #     - ./plugin/plugin.so:/app/plugin.so
  #   depends_on:
  #     mongo-0:
  #       condition: service_healthy
  #     es7:
  #       condition: service_healthy
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - test
  #   healthcheck:
  #     test: "wget -q -O - http://localhost:8080/healthz"
  #     interval: 10s
  #     timeout: 30s
  #     retries: 300
  #   restart: unless-stopped

  # mongo-0:
  #   image: mongo:4.4
  #   logging:
  #     driver: none
  #   container_name: c-mongo
  #   command: /scripts/mongo-run.sh
  #   working_dir: /scripts
  #   volumes:
  #     - ./mongodb/scripts:/scripts
  #   environment:
  #     MONGO_REPLICA_SET_NAME: rs0
  #     MONGO_REPLICAS: mongo-0:27017
  #     MONGO_REPLICA_SET_MEMBERS: "[{'_id':0,'host':'mongo-0:27017','priority':1}]"
  #     MONGO_USER_ROOT_NAME: root-user
  #     MONGO_USER_ROOT_PASSWORD: password
  #     MONGO_AUTH_SOURCE: admin
  #     MONGO_BIND_IP: "0.0.0.0"
  #   ports:
  #     - "27017:27017"
  #   networks:
  #     - test
  #   healthcheck:
  #     test: "[ -f /data/health.check ] && exit 0 || exit 1"
  #     interval: 2s
  #     timeout: 30s
  #     retries: 300
  #   restart: unless-stopped

  es7:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    logging:
      driver: none
    container_name: c-es
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - test
    healthcheck:
      test: "curl --fail http://localhost:9200 || exit 1"
      interval: 2s
      timeout: 60s
      retries: 300
    restart: unless-stopped
